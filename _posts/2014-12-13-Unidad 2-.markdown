---
layout: post
title:  "Unidad Numero 2: PROCESO DEL SOFTWARE"
date:   2019-12-19
description: El proceso de software, un conjunto estructurado de actividades necesarias para desarrollar un sistema de software.
image: 
---
<center><img src="https://i.ibb.co/sHgPpgr/software-1024x678.jpg"></center>

<p class="intro"><span class="dropcap">U</span>n conjunto estructurado de actividades necesarias para desarrollar un sistema de software.
Muchos de los procesos de software son diferentes, pero todos implican:
Especificación;
Diseño e implementación;
Validación;
Evolución.</p>

<h2>Características del proceso de Software</h2>

<p><b>Cualquier proceso tiene las siguientes características:</b><br>
    -El proceso establece todas las actividades principales.<br>
    -El proceso utiliza recursos, está sujeto a una serie de restricciones y genera productos intermedios y finales.
    -El proceso puede estar compuesto de subprocesos que se encadenan de alguna manera. Puede definirse como una jerarquía de procesos organizada de modo que cada subproceso tenga su propio modelo de proceso.
    -Cada actividad del proceso tiene criterios de entrada y de salida, de modo que se conoce cuándo comienza y cuándo termina una actividad.<br></p>
  <h2>Importancia del proceso de Software</h2>
  -Facilita la gestión del proyecto<br>
  -Establece una división del trabajo<br>
  -Facilita la comunicación de los miembros del equipo<br>
  -Permite la reasignación y la reutilización de personal especializado<br>
  -Mejora la productividad y el desarrollo<br>
  -Establece el contexto en el que se aplican los métodos técnicos<br></p>

  <h2>Estándares relacionados con el proceso de Software</h2>
  <b>Estándar ISO/IEC/IEEE 12207:2017</b>
  <p>-Esta norma no fomenta o especifica ningún modelo concreto de ciclo de vida, gestión del software o método de ingeniería, ni prescribe cómo realizar ninguna de las actividades.</p>
<center><img src="https://i.ibb.co/GTv5Kf1/627x627-Sftware-Dev-Feature-HUSS.jpg"></center>

<h2>Modelo de proceso de SW </h2>
<p>-Hay varios modelos de procesos definidos en la bibliografía de Ingeniería del Software<br>
   -Cada modelo de proceso representa un proceso desde una perspectiva particular, por lo que sólo ofrece una información parcial sobre dicho proceso.<br></p>
   <h2>Razones para modelar un proceso de Software</h2>
   <p>-Cuando se pone por escrito una descripción de un proceso, se da forma a una comprensión común de las actividades, recursos y restricciones relacionados con el desarrollo del software.<br>
   -Ayuda al equipo de desarrollo a encontrar las inconsistencias, las redundancias y las omisiones en el proceso y en las partes que lo constituyen.<br>
   -El modelo debe reflejar las metas del desarrollo. A medida que se construye el modelo el equipo de desarrollo evalúa las actividades candidatas por su adecuación para alcanzar dichas metas.<br></p>
<h2>Modelo general de proceso en Ingeniería</h2>
<b>Especificacion</b>
  -Formulación de los requisitos y restricciones del sistema.<br>
<b>Diseño</b>
  -Elaboración de un documento con el modelo del sistema.<br>
<b>Fabricación</b>
  -Construcción del sistema.<br>
<b>Prueba</b>
  -Comprobación de que el sistema cumple las especificaciones requeridas.<br>
<center><h2>El proceso de Software</h2></center>
-Conjunto de actividades necesarias para transformar las ideas iniciales del usuario, que desea automatizar un determinado trabajo, en software.<br>
-Conjunto ordenado de actividades; una serie de pasos que involucran tareas, restricciones y recursos que producen una determinada salida esperada.<br>
-Marco de trabajo de las tareas que se requieren para construir software de alta calidad.<br>
<h2>Modelo de Cascada</h2>
<center><img src="https://i.ibb.co/FxC2yxV/cascada.png"></center>
<p>Las fases están identificadas por separado:<br>
-El análisis  y definición de requerimientos.<br>
-Diseño del sistema y software.<br>
-Pruebas de implementación de unidades.<br>
-Integración y pruebas del sistema.<br> 
-Operación y mantenimiento.<br>

El principal inconveniente del modelo de la cascada es la dificultad de acomodar el cambio después de que está en marcha el proceso. En principio, una fase tiene que ser completada antes de pasar a la siguiente fase.</p>
<h2>Desarrollo incremental</h2>
<center><img src="https://i.ibb.co/h7cK9c2/DI.png"></center>
<b>Beneficios</b>
-El costo de atender las necesidades cambiantes de los clientes se reduce.<br>
-La cantidad de análisis y la documentación que tiene que ser hecho de nuevo es mucho menor que la que se requiere con el modelo de cascada.<br>
<b>Problemas</b>
-El proceso no es visible.<br>
-Los gerentes necesitan entregas regulares para medir el progreso. Si se desarrollan rápidamente los sistemas, no es rentable para producir documentos.<br> 
<h2>Espiral</h2>
<center><img src="https://i.ibb.co/6BfYDTL/Espiral.png"></center>
<b>Definicion</b>
-Es un modelo de ciclo de vida desarrollado por Barry Boehm en 1988.<br>
-Las actividades de este modelo son una espiral, cada bucle es una actividad.<br>
-Las actividades no están fijadas a prioridad, sino que las siguientes se eligen en función del -análisis de riesgo, comenzando por el bucle interior.<br>
<h2>Desarrollo Rápido de Aplicaciones (DRA)</h2>
<center><img src="https://i.ibb.co/HN1KbGk/dra.png"></center>
<p>-Es un modelo de proceso del ciclo de vida clásico que enfatiza un ciclo de vida de desarrollo extremadamente corto.<br>  
El modelo DRA es una adaptación a alta velocidad del ciclo de vida clásico en el que se logra el desarrollo rápido utilizando un enfoque de construcción basado en componentes. Si se comprenden bien los requisitos y se limita el ámbito del proyecto, el proceso DRA permite al equipo de desarrollo crear un sistema completamente funcional dentro de períodos cortos de tiempo.<br></p>
<h2>Orientados a la Reutilizacion</h2>
<center><img src="https://i.ibb.co/HXkjLF2/OR.png"></center>
<p>Esta aproximación se basa en la existencia de un número significativo de elementos reutilizables. El proceso de desarrollo, se centra en la integración de estos elementos en un sistema, en lugar de desarrollarlo desde cero.<br<
    Incorpora muchas características del modelo en espiral. Es evolutivo por naturaleza.<br></p>
<h2>Orientado a Objetos (OO)</h2>
<center><img src="https://i.ibb.co/Fhsr3PB/OO.png"></center>
<p>El modelo orientado a objetos utiliza el paradigma de la orientación a objetos para el desarrollo de software.<br>
Este enfoque realiza la construcción de modelos de un sistema por medio de la identificación y la especificación de un conjunto de objetos relacionados, que colaboran entre si de acuerdo a los requerimientos establecidos para el sistema de objetos.<br></p>
<h2>Proceso de Desarrollo de Software</h2>
<center><img src="https://i.ibb.co/Fhsr3PB/OO.png"></center>
<h2>Metodologias y Procesos Agiles</h2>
<center><img src="https://i.ibb.co/Pg77w7j/metodologias-agiles.jpg "></center>
<p>Cualquier proceso del software ágil se caracteriza por la forma en la que aborda cierto número de suposiciones clave [Fow02] acerca de la mayoría de proyectos de software:<br>
Es difícil predecir qué requerimientos de software persistirán y cuáles cambiarán.También es difícil pronosticar cómo cambiarán las prioridades del cliente a medida que avanza el proyecto.<br>
 Para muchos tipos de software, el diseño y la construcción están imbricados.<br></p>







    


    












 
